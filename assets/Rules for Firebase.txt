rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Lecture des profils des inspecteurs autorisée pour utilisateurs authentifiés
//    match /inspectors/{userId} {
//      allow read: if request.auth != null;
//      // Écriture seulement autorisée pour le propriétaire du doc ou les admins
//      allow write: if request.auth.uid == userId || 
//                    get(/databases/$(database)/documents/inspectors/$(request.auth.uid)).data.role == 'admin';
//    }
    match /{document=**} {
      allow read, write: if true;    
    }
//  // Autres règles...
  }
}


PROPOSITION DE CLAUDE MAIS NE MARCHE PAS ENCORE
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Permet la lecture à tous les utilisateurs authentifiés
    match /{document=**} {
      allow read: if request.auth != null;
    }
    
    // Collection inspectors
    match /inspectors/{userId} {
      allow read: if request.auth != null;
      // Écriture seulement par le propriétaire ou un admin
      allow write: if request.auth.uid == userId || 
                   get(/databases/$(database)/documents/inspectors/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Collections d'inspections
    match /trail_inspections/{inspectionId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null;
      allow delete: if get(/databases/$(database)/documents/inspectors/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /shelter_inspections/{inspectionId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null;
      allow delete: if get(/databases/$(database)/documents/inspectors/$(request.auth.uid)).data.role == 'admin';
    }
  }
}